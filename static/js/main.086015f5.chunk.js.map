{"version":3,"sources":["filter.svg","sort-ascending.svg","nameGenerate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","vowels","ends","genName","vowelMinLen","vowelMaxLen","end","capital","len","Math","floor","random","vowelMarked","map","e","key","rem","name","i","vowelIndex","length","endVowel","charAt","toUpperCase","slice","recursivePush","list","field","entry","listRef","prefix","notFoundClosestAncestorYet","col","children","randAdd","toString","substring","push","entries","desc","genCascadedNameEntries","console","log","TreeContext","createContext","sublist","displayList","history","sort","filter","pop","select","TreeList","data","itemSize","rest","ProcessedData","listIndex","useState","setHistory","setSublist","colSorts","setColSorts","colFilters","setColFilters","displayed","order","prev","next","filtered","elem","includes","Provider","value","ith","newHistoryEntry","histIndex","newSublist","newHistory","sorts","keyIndex","findIndex","iden","splice","pattern","itemData","ItemRenderer","estimatedItemSize","index","ItemWrapper","style","undefined","FilterHolder","top","topLength","height","backgroundColor","display","alignItems","className","FilterCol","colKey","isFilterable","isSortable","colProps","useContext","FilterComp","InputGroup","size","Input","onKeyUp","target","InputGroupAddon","color","addonType","InputGroupText","src","FilterIcon","Col","justifyContent","flex","Button","onClick","marginLeft","lineHeight","SortIcon","HistoryHolder","left","width","md","Row","userSelect","margin","HistRow","App","header","title","fontFamily","fontWeight","fontSize","letterSpacing","itemCount","innerElementType","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.086015f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filter.e8c1ef84.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-ascending.199eee97.svg\";","const vowels = ['ar', 'ra', 're', 'co', 'mo', 'ge', 'be', 'ti'],\n      ends = ['ll', 'st', 'lt', 'sch', 'ius'];\n\nfunction genName(vowelMinLen=4, vowelMaxLen=8, {end=true, capital=true}={}){\n  let len = Math.floor(Math.random()*(vowelMaxLen-vowelMinLen) + vowelMinLen);\n\n  // avoiding same vowel repeats too many times in a name.\n  let vowelMarked = vowels.map(e => ({key:e, rem:2}));\n\n  let name = '';\n  for (let i = 0; i < len; i++){\n    const vowelIndex = Math.floor(Math.random()*vowels.length);\n    const {key, rem} = vowelMarked[vowelIndex];\n    if(rem > 0){\n      vowelMarked[vowelIndex].rem --;\n      name += key;\n    }\n  }\n\n  // Both to make it looks more like a real name.\n  if (end) {\n    let endVowel = ends[Math.floor(Math.random()*ends.length)];\n    name += endVowel;\n  }\n\n  if (capital){\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n  }\n\n  return name;\n}\n\nconst PROB = 0.1;\nfunction recursivePush(list, field, entry){\n  let listRef = list,\n      prefix = '';\n  \n  while(true) notFoundClosestAncestorYet:{\n    for (let {[field]: col, children} of listRef){\n      if(Math.random() < PROB){\n        listRef = children;\n        prefix = col;\n        break notFoundClosestAncestorYet;\n      }\n    }\n\n    // When for loop ends and we reach here, we have\n    // found the closest ancestor: the owner of listRef.\n    let randAdd = Math.random().toString(36).substring(11);\n    listRef.push({...entry, [field]:`${prefix}${randAdd}`});\n    break;\n  }\n}\n\nexport function genCascadedNameEntries(length){\n\n  let entries = [];\n  for (let i = 0; i < length; i++){\n    recursivePush(entries, 'name', {desc: genName(3, 6), key:i, children:[]});\n  }\n\n  return entries;\n}","import React, { createContext, useContext, useState } from \"react\";\nimport { VariableSizeList as List } from \"react-window\";\nimport {InputGroup, InputGroupAddon, InputGroupText, Col, Input, Button} from 'reactstrap';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport {genCascadedNameEntries} from './nameGenerate';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport FilterIcon from './filter.svg';\nimport SortIcon from './sort-ascending.svg';\n\nconst entries = genCascadedNameEntries(20000);\nconst LINE_HEIGHT = 30;\nconst FILTER_BAR_HEIGHT = 45;\nconsole.log(entries);\n\n\nconst TreeContext = createContext({\n\n  // Original sublist comes from the original data, and\n  // copied to the displayed list, and then apply the sorting\n  // and filtering method over it.\n  sublist: [],\n  displayList: [],\n  history:[],\n\n  sort:() => {},\n  filter: () => {},\n\n  pop:() => {},\n  select:() => {}\n});\n\nconst TreeList = function({data, children, itemSize, ...rest}){\n  \n  const ProcessedData = data.map((e, i) => ({...e, listIndex:i}));\n\n  const [history, setHistory] = useState([]);\n  const [sublist, setSublist] = useState(ProcessedData);\n\n  const [colSorts, setColSorts] = useState([]);\n  const [colFilters, setColFilters] = useState({});\n\n  const select = (ith) => {\n\n    let newHistoryEntry = {...sublist[ith], histIndex:history.length};\n    let newSublist = sublist[ith].children.map((e, i) => ({...e, listIndex:i}))\n\n    setHistory([...history, newHistoryEntry]);\n    setSublist(newSublist);\n  }\n\n  const pop = (ith) => {\n    const newHistory = history.slice(0, ith);\n    setHistory(newHistory);\n\n    let newSublist;\n    if (newHistory.length > 0){\n      newSublist = newHistory[newHistory.length-1].children.map((e, i) => ({...e, listIndex:i}));\n    } else {\n      newSublist = data.map((e, i) => ({...e, listIndex:i}))\n    }\n    setSublist(newSublist);\n  }\n\n  const sort = (key) => {\n\n    let sorts = [...colSorts];\n\n    if(sorts.length > 0){\n      let keyIndex = sorts.findIndex((e) => e.col === key);\n\n      let iden = {col:key, order:'ascend'};\n      if (keyIndex !== -1){\n        [iden] = sorts.splice(keyIndex, 1);\n        iden.order = iden.order === 'ascend' ? 'descend' : 'ascend';\n      }\n      sorts.push(iden);\n\n    } else {\n      sorts = [{col:key, order:'ascend'}];\n    }\n\n    setColSorts(sorts);\n  }\n\n  const filter = (key, pattern) => {\n    setColFilters({...colFilters, [key]: pattern});\n  }\n\n  let displayed = [...sublist];\n  for (let {col, order} of colSorts){\n    displayed.sort((prev, next) => {\n      const original = prev[col] < next[col] ? -1 : prev[col] > next[col] ? 1 : 0;\n      const modifier = {\n        'descend' : 1,\n        'ascend'  : -1\n      }[order];\n\n      return original * modifier;\n    })\n  }\n\n  for (let key in colFilters){\n    const filtered = displayed.filter((elem) => {\n      return elem[key].toString().includes(colFilters[key]);\n    })\n\n    if (filtered.length > 0){\n      displayed = filtered;\n    }\n  }\n\n  const entries = [...history, {filter:true}, ...displayed]\n\n  return <TreeContext.Provider value={{history, sublist, select, pop, sort, filter}}>\n    <List\n      itemData={{ ItemRenderer: children, entries}}\n      estimatedItemSize={itemSize}\n      itemSize={(index) => index === history.length ? FILTER_BAR_HEIGHT : LINE_HEIGHT}\n    {...rest}\n    >\n      {ItemWrapper}\n    </List>\n  </TreeContext.Provider>\n}\n\n// Item Wrapper is the direct item render of List. It does two things:\n\n// 1. Skip the history items. Leave them blank over the scrollable views.\n// 2. Render the remaining non-sticky items with the actual render we pass\n//    into.\nconst ItemWrapper = ({ data, index, style }) => {\n  const { ItemRenderer, entries } = data;\n\n  if (entries[index] === undefined){\n    return null;\n  }\n\n  if(entries[index].filter){\n    return null\n  }\n\n  if (entries[index].listIndex === undefined) {\n    return null;\n  }\n\n  return <ItemRenderer data={entries} index={index} style={style} />;\n};\n\n// HistoryHodler is passed into as the innerElementType, which is div by normal.\n// however, it doesn't affected by scrolling, and is the place where we are going\n// to render sticky items.\n\nconst FilterHolder = ({children, topLength}) => {\n  const style = {\n    top: topLength * LINE_HEIGHT,\n    height: FILTER_BAR_HEIGHT,\n    backgroundColor:'#abcdef',\n    display: 'flex',\n    alignItems: 'center'\n  }\n  return <div className=\"sticky\" style={style}>{children}</div>\n}\n\nconst FilterCol = ({colKey, isFilterable, isSortable, ...colProps}) => {\n\n  const {sort, filter} = useContext(TreeContext);\n\n  const colStyle = {\n    display:'flex',\n    justifyContent:'space-between'\n  }\n\n  const buttonWrapStyle ={\n    flex:'0 1 6rem',\n  }\n\n  const FilterComp = <InputGroup size='sm'>\n    <Input onKeyUp={(e) => filter(colKey, e.target.value)} />\n    <InputGroupAddon color=\"warning\" addonType=\"prepend\">\n      <InputGroupText><img style={{height:'1.1rem'}} src={FilterIcon} /></InputGroupText>\n    </InputGroupAddon>\n  </InputGroup>\n\n  return <Col style={colStyle} {...colProps} >\n    {isFilterable && FilterComp}\n    {isSortable && <div style={buttonWrapStyle}>\n      <Button onClick={() => {sort(colKey)}} style={{marginLeft:'0.5rem', lineHeight:'1.25rem'}} size=\"sm\" color=\"warning\">\n        <img style={{height:'1.1rem'}} src={SortIcon} />\n      </Button>\n    </div>}\n  </Col>\n}\n\nconst HistoryHolder = ({ children, ...rest }) => {\n  const {history} = useContext(TreeContext);\n\n  return <div {...rest}>\n    {history.map((elem, index) => {\n      return <HistRow\n        data={history}\n        index={index}\n        key={index}\n        style={{ top: index * LINE_HEIGHT, left: 0, width: \"100%\", height: LINE_HEIGHT }}\n      />\n    })}\n    <FilterHolder topLength={history.length}>\n      <FilterCol md='3'/>\n      <FilterCol md='6' colKey='desc' isSortable={true} isFilterable={true}/>\n      <FilterCol md='3' colKey='key'  isSortable={true} isFilterable={true}/>\n    </FilterHolder>\n    {children}\n  </div>\n}\n\nconst Row = ({ data, index, style }) => {\n  \n  const {select} = useContext(TreeContext);\n\n  const {name, desc, key, listIndex} = data[index];\n  \n  let rowStyle = {\n    display: 'flex',\n    userSelect:'none',\n    alignItems: 'center'\n  }\n\n  return <div className='hovered' style={{...style, ...rowStyle}} onClick={() => select(listIndex)}>\n    <Col md='3'><div style={{margin:'0.5rem'}}>{name}</div></Col>\n    <Col md='6'><div style={{margin:'0.5rem'}}>{desc}</div></Col>\n    <Col md='3'><div style={{margin:'0.5rem'}}>{key}</div></Col>\n  </div>\n};\n\nconst HistRow = ({ data, index, style }) => {\n  \n  const {pop} = useContext(TreeContext);\n\n  const {name, desc, key, histIndex} = data[index];\n  \n  let rowStyle = {\n    display: 'flex',\n    userSelect:'none',\n    alignItems: 'center'\n  }\n\n  return <div className=\"sticky hovered\" style={{...style, ...rowStyle}} onClick={() => pop(histIndex)}>\n    <Col md='3'><div style={{margin:'0 0.5rem'}}>{name}</div></Col>\n    <Col md='6'><div style={{margin:'0 0.5rem'}}>{desc}</div></Col>\n    <Col md='3'><div style={{margin:'0 0.5rem'}}>{key}</div></Col>\n  </div>\n};\n\nconst App = () => {\n\n  let headerStyle = {\n    display: 'flex',\n    userSelect:'none',\n    alignItems:'center',\n    backgroundColor:'#343a40',\n    color:'#f8f9fa'\n  }\n\n  const header = <div className=\"header\" style={headerStyle}>\n    <Col md='3'><div style={{margin:'0 0.5rem'}}>Name (Random path-like text)</div></Col>\n    <Col md='6'><div style={{margin:'0 0.5rem'}}>Description (Random name-like text)</div></Col>\n    <Col md='3'><div style={{margin:'0 0.5rem'}}>Index (Random integer)</div></Col>\n  </div>\n\n  const titleStyle = {\n    marginLeft:'10px',\n    fontFamily: '\"Avenir Next\", \"Helvetica Neue\", sans-serif',\n    fontWeight:'700',\n    fontSize:'4.5rem',\n    letterSpacing:'-0.3rem'\n  }\n\n  const title = <h1 style={titleStyle}>Cascaded (Tree-like) Data</h1>\n\n  return  <div style={{height:'100vh', width:'100vw'}}>\n    {title}\n    {header}\n    <div style={{height:'80vh', width:'100%'}}>\n      <AutoSizer>\n        {({height, width}) => {\n          return <TreeList\n            data={entries}\n            height={height}\n            width={width}\n            itemSize={LINE_HEIGHT}\n            itemCount={entries.length}\n            innerElementType={HistoryHolder}\n          >\n            {Row}\n          </TreeList>\n        }}\n      </AutoSizer>\n    </div>\n  </div>\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}